<div class="max-w-2xl mx-auto">
  <div class="bg-white rounded-lg shadow-sm border border-gray-200">
    <div class="px-6 py-4 border-b border-gray-200">
      <h2 class="text-lg font-medium text-gray-900">
        <%= product.new_record? ? "Add New Product" : "Edit Product" %>
      </h2>
      <p class="mt-1 text-sm text-gray-500">
        <%= product.new_record? ? "Enter the details of your grocery purchase. After saving, you'll be able to add another product." : "Update the product information" %>
      </p>
    </div>

    <%= form_with(model: product, class: "space-y-6") do |form| %>
      <% if product.errors.any? %>
        <div class="bg-red-50 border border-red-200 rounded-lg p-4">
          <h2 class="text-sm font-medium text-red-800">
            <%= pluralize(product.errors.count, "error") %> prohibited this product from being saved:
          </h2>
          <ul class="mt-2 text-sm text-red-700 list-disc list-inside">
            <% product.errors.each do |error| %>
              <li><%= error.full_message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <div class="space-y-6">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Product Name
            </label>
            <%= form.text_field :name, 
                placeholder: "e.g., Organic Bananas", 
                class: ["block w-full rounded-lg border px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500", 
                        {"border-gray-300": product.errors[:name].none?, "border-red-300 focus:ring-red-500 focus:border-red-500": product.errors[:name].any?}] %>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Purchase Date
            </label>
            <%= form.date_field :purchase_date, 
                class: ["block w-full rounded-lg border px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500", 
                        {"border-gray-300": product.errors[:purchase_date].none?, "border-red-300 focus:ring-red-500 focus:border-red-500": product.errors[:purchase_date].any?}] %>
          </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Store
            </label>
            <%= form.collection_select :store_id, Store.all, :id, :name, 
                { prompt: "Select a store" }, 
                class: ["block w-full rounded-lg border px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500", 
                        {"border-gray-300": product.errors[:store_id].none?, "border-red-300 focus:ring-red-500 focus:border-red-500": product.errors[:store_id].any?}] %>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Unit
            </label>
            <%= form.text_field :unit, 
                placeholder: "e.g., kg, pkt, each", 
                class: ["block w-full rounded-lg border px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500", 
                        {"border-gray-300": product.errors[:unit].none?, "border-red-300 focus:ring-red-500 focus:border-red-500": product.errors[:unit].any?}] %>
          </div>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Quantity
            </label>
            <%= form.number_field :quantity, 
                step: "0.01", 
                min: "0", 
                placeholder: "1.0", 
                class: ["block w-full rounded-lg border px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500", 
                        {"border-gray-300": product.errors[:quantity].none?, "border-red-300 focus:ring-red-500 focus:border-red-500": product.errors[:quantity].any?}], 
                id: "quantity_field" %>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Unit Price
            </label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <span class="text-gray-500 text-sm">$</span>
              </div>
              <%= form.number_field :unit_price, 
                  step: "0.01", 
                  placeholder: "0.00", 
                  class: ["block w-full rounded-lg border pl-8 pr-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500", 
                          {"border-gray-300": product.errors[:unit_price].none?, "border-red-300 focus:ring-red-500 focus:border-red-500": product.errors[:unit_price].any?}], 
                  id: "unit_price_field" %>
            </div>
            <p class="mt-1 text-xs text-gray-500">Use negative values for vouchers/discounts (e.g., -20.00)</p>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Total Cost
            </label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <span class="text-gray-500 text-sm">$</span>
              </div>
              <%= form.number_field :total_cost, 
                  step: "0.01", 
                  class: ["block w-full rounded-lg border pl-8 pr-3 py-2 text-sm bg-gray-50 text-gray-900", 
                          {"border-gray-300": product.errors[:total_cost].none?, "border-red-300": product.errors[:total_cost].any?}], 
                  id: "total_cost_field", 
                  readonly: true %>
            </div>
            <p class="mt-1 text-xs text-gray-500">Calculated automatically (negative for vouchers/discounts)</p>
          </div>
        </div>

        <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 pt-4 border-t border-gray-200">
          <%= form.submit class: "w-full sm:w-auto rounded-lg px-4 sm:px-6 py-2.5 sm:py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium cursor-pointer transition-colors duration-200 text-sm sm:text-base" %>
          <%= link_to "Done", products_path, class: "w-full sm:w-auto text-center rounded-lg px-4 sm:px-6 py-2.5 sm:py-3 bg-gray-600 hover:bg-gray-700 text-white font-medium transition-colors duration-200 text-sm sm:text-base" %>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const unitPriceField = document.getElementById('unit_price_field');
  const quantityField = document.getElementById('quantity_field');
  const totalCostField = document.getElementById('total_cost_field');

  function calculateTotalCost() {
    const unitPrice = parseFloat(unitPriceField.value) || 0;
    const quantity = parseFloat(quantityField.value) || 0;
    const totalCost = unitPrice * quantity;
    
    // Format the result to 2 decimal places
    totalCostField.value = totalCost.toFixed(2);
    
    // Update the field color based on whether it's positive or negative
    if (totalCost < 0) {
      totalCostField.classList.add('text-red-600', 'font-semibold');
      totalCostField.classList.remove('text-gray-900');
    } else {
      totalCostField.classList.remove('text-red-600', 'font-semibold');
      totalCostField.classList.add('text-gray-900');
    }
  }

  // Calculate on input change
  unitPriceField.addEventListener('input', calculateTotalCost);
  quantityField.addEventListener('input', calculateTotalCost);

  // Calculate on page load if values exist
  calculateTotalCost();
});
</script>
